<?xml version="1.0" encoding="UTF-8"?>
<module type="RUBY_MODULE" version="4">
  <component name="FacetManager">
    <facet type="RailsFacetType" name="Ruby on Rails">
      <configuration>
        <RAILS_FACET_CONFIG_ID NAME="RAILS_FACET_SUPPORT_REMOVED" VALUE="false" />
        <RAILS_FACET_CONFIG_ID NAME="RAILS_TESTS_SOURCES_PATCHED" VALUE="true" />
        <RAILS_FACET_CONFIG_ID NAME="RAILS_FACET_APPLICATION_ROOT" VALUE="$MODULE_DIR$" />
      </configuration>
    </facet>
  </component>
  <component name="NewModuleRootManager">
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/test" isTestSource="true" />
      <sourceFolder url="file://$MODULE_DIR$/spec" isTestSource="true" />
      <sourceFolder url="file://$MODULE_DIR$/features" isTestSource="true" />
      <excludeFolder url="file://$MODULE_DIR$/.bundle" />
      <excludeFolder url="file://$MODULE_DIR$/components" />
      <excludeFolder url="file://$MODULE_DIR$/log" />
      <excludeFolder url="file://$MODULE_DIR$/public/packs" />
      <excludeFolder url="file://$MODULE_DIR$/public/system" />
      <excludeFolder url="file://$MODULE_DIR$/tmp" />
      <excludeFolder url="file://$MODULE_DIR$/vendor/bundle" />
      <excludeFolder url="file://$MODULE_DIR$/vendor/cache" />
    </content>
    <orderEntry type="jdk" jdkName="rbenv: 2.4.0" jdkType="RUBY_SDK" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="library" scope="PROVIDED" name="actioncable (v5.0.7.2, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="actionmailer (v5.0.7.2, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="actionpack (v5.0.7.2, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="actionview (v5.0.7.2, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="activejob (v5.0.7.2, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="activemodel (v5.0.7.2, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="activerecord (v5.0.7.2, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="activesupport (v5.0.7.2, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="arel (v7.1.4, rbenv: 2.4.0) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="bindex (v0.8.1, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="builder (v3.2.4, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="bundler (v1.16.1, rbenv: 2.4.0) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="byebug (v11.1.3, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="coffee-rails (v4.2.2, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="coffee-script (v2.4.1, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="coffee-script-source (v1.12.2, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="concurrent-ruby (v1.1.7, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="crass (v1.0.6, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="erubis (v2.7.0, rbenv: 2.4.0) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="execjs (v2.7.0, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="ffi (v1.14.2, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="globalid (v0.4.2, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="i18n (v1.8.7, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="jbuilder (v2.10.1, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="jquery-rails (v4.4.0, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="listen (v3.0.8, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="loofah (v2.8.0, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="mail (v2.7.1, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="method_source (v1.0.0, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="mini_mime (v1.0.2, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="mini_portile2 (v2.4.0, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="minitest (v5.14.2, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="nio4r (v2.5.4, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="nokogiri (v1.10.10, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="pg (v0.21.0, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="puma (v3.12.6, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rack (v2.2.3, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rack-test (v0.6.3, rbenv: 2.4.0) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rails (v5.0.7.2, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rails-dom-testing (v2.0.3, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rails-html-sanitizer (v1.3.0, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="railties (v5.0.7.2, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rake (v13.0.3, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rb-fsevent (v0.10.4, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rb-inotify (v0.10.1, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="sass (v3.7.4, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="sass-listen (v4.0.0, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="sass-rails (v5.0.7, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="spring (v2.1.1, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="spring-watcher-listen (v2.0.1, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="sprockets (v3.7.2, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="sprockets-rails (v3.2.2, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="thor (v1.0.1, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="thread_safe (v0.3.6, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="tilt (v2.0.10, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="turbolinks (v5.2.1, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="turbolinks-source (v5.2.0, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="tzinfo (v1.2.9, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="uglifier (v4.2.0, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="web-console (v3.7.0, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="websocket-driver (v0.6.5, rbenv: 2.4.0) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="websocket-extensions (v0.1.5, rbenv: 2.4.0, docker-practice) [gem]" level="application" />
  </component>
  <component name="RModuleSettingsStorage">
    <LOAD_PATH number="0" />
    <I18N_FOLDERS number="1" string0="$MODULE_DIR$/config/locales" />
  </component>
</module>